---
alwaysApply: false
---
网络环境
- n580是一个串口转tcp的设备，N580上有很多的端口
- n580 是一个tcp 服务端 ，其他设备作为客户端读区数据 发送数据
- 当前设备连接的端口为32（窗帘控制的服务端）
- comtool是一个通讯客户端
- hass也是一个客户端

- 分析01
    - 读区的数据分析
    字节位置	长度	描述	示例值	格式
    0	1字节	起始标志	0x55	固定值
    1-2	2字节	设备地址	0x06FE	大端序
    3	1字节	功能码	0x01 (读取) / 0x03 (写入)	-
    4	1字节	数据地址	0x01	-
    5	1字节	数据值	0x63 (位置%)	0-100
    6-7	2字节	CRC校验	0xA58F	小端序
    - 发送端的数据分析
    字节位置	长度	描述	打包格式	字节序
    0	1字节	起始标志 0x55	>B	大端序
    1-2	2字节	设备地址	>H	大端序
    3	1字节	功能码	>B	大端序
    4	1字节	数据地址	>B	大端序
    5	1字节	数据值	>B	大端序
    6-7	2字节	CRC校验	<H	小端序
- 分析02
    多个地址也就是说有多个设备
- comtool 工具读取
[2025-07-14 12:43:49.266] [HEX]: 55 06 FE 01 01 63 A5 8F 
[2025-07-14 12:43:52.338] [HEX]: 55 01 FE 01 01 63 10 4F 
[2025-07-14 12:43:55.295] [HEX]: 55 0A FE 01 01 00 F5 A7 
[2025-07-14 12:43:58.378] [HEX]: 55 05 FE 01 01 01 60 66 
[2025-07-14 12:44:01.451] [HEX]: 55 08 FE 01 01 02 0D A6 
[2025-07-14 12:44:04.479] [HEX]: 55 04 FE 01 01 63 DC 4F 
[2025-07-14 12:44:07.462] [HEX]: 55 09 FE 01 01 64 B0 4C 
[2025-07-14 12:44:10.501] [HEX]: 55 03 FE 01 01 62 A8 4F 
[2025-07-14 12:44:13.547] [HEX]: 55 07 FE 01 01 63 98 4F 
[2025-07-14 12:44:16.587] [HEX]: 55 02 FE 01 01 63 54 4F 
。。。。


- 插件设计逻辑
1.把tcp 连接功能模块 单独拿出来
    - tcp 接受信息是多个设备的反馈。只需要一个循环就可以收到


 2. 配置流程 输入了ip 以及端口
    1. 设备自动发现 识别设备的地址 （创建实体）   
    2. 有了设备地址我门完全可以生成控制指令 
        生成----open close stop
        生成---- open到某个位置 加入crc验证
    3. 状态反馈 tcp不停的轮训 得到反馈状态 分发给各自的实体

- 关键点
    一个tcp建立连接 轮训（查状态 分发个实体 ，地址唯一） 这个tcp 也可以发送指令



## 设备信息

| 设备码 | 位置 |
|--------|------|
| 06FE | 主卧室_纱帘 |
| 05FE | 主卧室_布帘 |
| 04FE | 客厅_纱帘 |
| 07FE | 儿童房_布帘 |
| 08FE | 儿童房_纱帘 |
| 0AFE | 书房_纱帘 |
| 09FE | 书房_布帘 |
| 02FE | 老人房_纱帘 |
| 01FE | 老人房_布帘 |
| 03FE | 客厅_布帘 |

- 设备码 与位置的映射只是满足我的家庭情况  ，我希望在引导的时有一个勾选☑️  如果勾选检查映射表有就映射 没有就是设备的地址作为名称，没有勾选全部设备地址作为名称

- 希望集成是一个设备类型 下面有实体窗帘 设备是duya


- 问题
日志
ice 0x0AFE position update: 98 -> 98
2025-07-15 15:04:36.138 INFO (MainThread) [custom_components.curtain_control.coordinator] 📍 Device 0x05FE position update: 100 -> 100
2025-07-15 15:04:39.173 INFO (MainThread) [custom_components.curtain_control.coordinator] 📍 Device 0x08FE position update: 99 -> 99
2025-07-15 15:04:42.214 INFO (MainThread) [custom_components.curtain_control.coordinator] 📍 Device 0x04FE position update: 99 -> 99
2025-07-15 15:04:45.288 INFO (MainThread) [custom_components.curtain_control.coordinator] 📍 Device 0x09FE position update: 100 -> 100
2025-07-15 15:04:48.335 INFO (MainThread) [custom_components.curtain_control.coordinator] 📍 Device 0x03FE position update: 98 -> 98
读区日志我们可以看出来 由于硬件限位器的不精确导致上报数据出现了 97 98 99 100  或者0 1 2 3   我希望通过软件改变  也就是上报数据前分析一下 如果 97-100 上报100  如果0-3 上报 0